services:
  client:
    container_name: dp-client
    build:
      dockerfile: client/Dockerfile
      args:
        DISPLAY: ${DISPLAY} # Pass display variable from terminal
    environment:
      - DISPLAY=${DISPLAY} # Pass display variable from terminal
      - GRPC_URL=0.0.0.0:7777
      - GRPC_TIMEOUT=10
    depends_on:
      - server
    volumes:
      # - ./client:/app/client
      - /tmp/.X11-unix:/tmp/.X11-unix # X11 forwarding
      - /usr/share/seclists/Passwords:/usr/share/seclists/Passwords

  # TODO: add a good healtcheck because otherwise this will try to connect to tcp server before is starts
  raspberrypi:
    container_name: emulate-raspberrypi
    build:
      context: raspberry-pi
      dockerfile: Dockerfile
    depends_on:
      - server
    environment:
      - SERVER_HOST=server
      - SERVER_PORT=4747
      - TCP_ADDRESS=server
      - TCP_PORT=4749
      - TEST=True
      - HOME_WIFI=Vodafone-A60818803 # Change with your SSID xD
    entrypoint: go run main.go run --username=admin --password=test1234 # these credentials won't work if DEBUG of server is disabled

  server:
    container_name: dp-server
    build:
      context: server
      dockerfile: Dockerfile
    depends_on:
      database:
        condition: service_healthy
    environment:
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=4747
      - FRONTEND_HOST=0.0.0.0
      - FRONTEND_PORT=4748
      - DB_USER=agent
      - DB_PASSWORD=SUPERSECUREUNCRACKABLEPASSWORD # This should be changed (remember to change it in database/initialize.sql too
      - DB_HOST=dp-database
      - DB_PORT=3306
      - DB_NAME=dp_hashcat
      - ALLOW_REGISTRATIONS=True # Disable if needed
      - DEBUG=True  # This will enable seeds for having some accounts for testing purposes. admin:test1234 will bre created
      - RESET=True
      - GRPC_URL=0.0.0.0:7777
      - GRPC_TIMEOUT=10s
      - TCP_ADDRESS=0.0.0.0
      - TCP_PORT=4749
    ports:
      - 4747:4747 # TODO: code development only, MUST BE REMOVED
      - 4749:4749
    entrypoint: make run

  database:
    build: database
    container_name: dp-database
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    restart: unless-stopped
    ports: 
      - "3306:3306"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-uagent",
          "-pSUPERSECUREUNCRACKABLEPASSWORD",
        ]
      timeout: 20s
      retries: 10

