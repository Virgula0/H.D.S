networks:
  dp-network:
    driver: bridge

services:
  client:
    container_name: dp-client
    build:
      dockerfile: client/Dockerfile
      args:
        DISPLAY: ${DISPLAY} # Pass display variable from terminal
    environment:
      - DISPLAY=${DISPLAY} # Pass display variable from terminal
      - GRPC_URL=dp-server:7777
      - GRPC_TIMEOUT=10s
    depends_on:
      server:
        condition: service_healthy
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix # X11 forwarding
    entrypoint: /app/client/build/client
    networks:
      - dp-network

  raspberrypi:
    container_name: emulate-raspberrypi
    build:
      context: raspberry-pi
      dockerfile: Dockerfile
    depends_on:
      server:
        condition: service_healthy
    environment:
      - SERVER_HOST=server
      - SERVER_PORT=4747
      - TCP_ADDRESS=server
      - TCP_PORT=4749
      - TEST=True
      - HOME_WIFI=Vodafone-A60818803 # Change with your SSID 
      - BETTERCAP=False
    entrypoint: /app/rsp/build/daemon insecure-login --username=admin --password=test1234
    networks:
      - dp-network

  server:
    container_name: dp-server
    build:
      dockerfile: server/Dockerfile
    depends_on:
      database:
        condition: service_healthy
    environment:
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=4747
      - FRONTEND_HOST=0.0.0.0
      - FRONTEND_PORT=4748
      - DB_USER=agent
      - DB_PASSWORD=SUPERSECUREUNCRACKABLEPASSWORD # This should be changed (remember to change it in database/initialize.sql too
      - DB_HOST=dp-database
      - DB_PORT=3306
      - DB_NAME=dp_hashcat
      - ALLOW_REGISTRATIONS=True # Disable if needed
      - DEBUG=True  # This will enable seeds for having handshake, clients, and raspberryPI mocked
      - RESET=True
      - GRPC_URL=0.0.0.0:7777
      - GRPC_TIMEOUT=10s
      - TCP_ADDRESS=0.0.0.0
      - TCP_PORT=4749
    ports:
      - 4748:4748 
    entrypoint: /app/server/build/server
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' -X POST -d '{}' http://localhost:4747/v1/login || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 10s
    networks:
      - dp-network

  database:
    build: database
    container_name: dp-database
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    restart: unless-stopped
    ports:
      - "3306:3306"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-uagent",
          "-pSUPERSECUREUNCRACKABLEPASSWORD",
        ]
      timeout: 20s
      retries: 10

    networks:
      - dp-network
