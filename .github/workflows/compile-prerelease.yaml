name: Compile and Pre-Release

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history to ensure merge base can be found

    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: protobuf-compiler zip libgl1-mesa-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev libwayland-dev libxkbcommon-dev \
                  libminizip-dev ocl-icd-libopencl1 opencl-headers pocl-opencl-icd build-essential wget git ca-certificates libz-dev libssl-dev libpcap0.8-dev
        version: 1.0

    - name: Read version from file
      id: read_version
      run: echo "VERSION=$(cat version)" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.4

    - name: Install protoc and dependencies
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
    
    # build rsp
    - name: Run rsp build
      run: |
        cd raspberry-pi
        make build

    # build server
    - name: Run server build
      run: |
        cd server
        make build

    # build client
    - name: Run client build
      run: |
        git submodule update --init --remote --recursive
        cd client
        make build

    # Zip the client build
    - name: Zip client build
      run: zip -r client.zip client/build/*

    - name: Create a pre-release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: "${{ env.VERSION }}-pre-${{ github.run_number }}"
        name: "${{ env.VERSION }}-pre-${{ github.run_number }}"
        draft: false
        prerelease: true
        files: |
          server/build/*
          client.zip
          raspberry-pi/build/*
